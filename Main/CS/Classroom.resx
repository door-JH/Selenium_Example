<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>